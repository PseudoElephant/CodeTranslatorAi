service: 'codetranslator-ai'
plugins:
  - serverless-esbuild
  - serverless-offline
package:
   individually: true
provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  tracing:
      apiGateway: true

functions:
  authorizer:
    handler: src/functions/authorizer/index.handler
  checkout-session:
    handler: src/functions/checkout-session/index.handler
    environment:
      DOMAIN: 'https://localhost:3000'
    events:
      - http:
          method: POST
          path: checkout-session/
          authorizer:
            name: authorizer
            type: request
            resultTtlInSeconds: 300
            identitySource: method.request.header.Authorization

            
  login:
    handler: src/functions/login/index.handler
    environment:
      SESSION_LIFE_TIME_SECONDS: 345600 # 4 * 24 * 60 * 60 - 4 days 
    events:
      - http:
          method: POST
          path: login/
  logout:
    handler: src/functions/logout/index.handler
    events:
      - http:
          method: POST
          path: logout/
          authorizer: 
            name: authorizer
            identitySource: method.request.header.Authorization
  sign-up:
    handler: src/functions/sign-up/index.handler
    events:
      - http:
          method: POST
          path: sign-up/
  stripe-webhook-handler:
    handler: src/functions/stripe-webhook-handler/index.handler
    environment:
      STRIPE_SECRET_KEY: ${file(./config.production.json):STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_KEY: ${file(./config.production.json):STRIPE_WEBHOOK_KEY}
    events:
      - http: 
          method: POST
          path: webhook-stripe/
  translate:
    handler: src/functions/translate/index.handler
    timeout: 20
    environment:
      DATABASE_URL: ${file(./config.production.json):DATABASE_URL}
      OPENAI_API_KEY: ${file(./config.production.json):OPENAI_API_KEY}
    events:
      - http: 
          method: POST
          path: translate/
          authorizer:
            name: authorizer
            type: request
            resultTtlInSeconds: 300
            identitySource: method.request.header.Authorization
	
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
